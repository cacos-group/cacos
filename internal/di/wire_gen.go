// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package di

import (
	"github.com/cacos-group/cacos/internal/conf"
	"github.com/cacos-group/cacos/internal/resource"
	"github.com/cacos-group/cacos/internal/service"
)

// Injectors from wire.go:

//bash ~/go/bin/wire
func InitApp(config *conf.Config) (*App, func(), error) {
	cacos, cleanup, err := resource.NewCacos(config)
	if err != nil {
		return nil, nil, err
	}
	serviceService, cleanup2, err := service.New(cacos)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	server := resource.NewGRPCServer(config)
	logger := resource.NewLog(config)
	app, cleanup3, err := NewApp(config, serviceService, server, logger)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	return app, func() {
		cleanup3()
		cleanup2()
		cleanup()
	}, nil
}
